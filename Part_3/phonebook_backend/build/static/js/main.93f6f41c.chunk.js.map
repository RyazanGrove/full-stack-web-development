{"version":3,"sources":["components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","services/contacts.js","App.js","index.js"],"names":["Person","name","number","deleteFunction","onClick","Persons","props","persons","map","person","PersonForm","onSubmit","addPerson","onChange","handleNameInputChange","handleNumberInputChange","type","Filter","filterNames","baseUrl","axios","get","newObject","post","i","delete","id","put","App","useState","setPersons","newName","setNewName","newNumber","setNumber","useFilter","setUseFilter","personsToShow","setPersonsToShow","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","phonebookService","then","response","data","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","event","target","value","length","filteredNames","toLowerCase","includes","concat","preventDefault","filter","window","confirm","find","n","updatedPerson","setTimeout","catch","error","newPerson","newArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93f6f41c.chunk.js","sourcesContent":["const Person = ({name, number, deleteFunction}) => {\n    const deleteFunctionForButton = () => {\n        deleteFunction(name)\n    }\n    return(\n        <p>\n            {name} {number}\n            <button onClick={deleteFunctionForButton}>delete</button>\n        </p>\n    )\n}\n\nexport default Person","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = (props) => {\n    return(\n        <div>\n            {props.persons.map(person =>\n                <Person key={person.name} name={person.name} number={person.number} deleteFunction={props.deleteFunction}/>\n            )}\n        </div>\n    )\n}\n\nexport default Persons","import React from \"react\";\n\nconst PersonForm = (props) => {\n    return(\n        <form onSubmit={props.addPerson}>\n            <div>\n                name: <input onChange={props.handleNameInputChange}/>\n            </div>\n            <div>\n                number: <input onChange={props.handleNumberInputChange}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from \"react\";\n\nconst Filter = (props) =>{\n    return(\n        <div>\n            filter shown with <input onChange={props.filterNames}/>\n        </div>\n    )\n}\n\nexport default Filter","import axios from \"axios\";\nconst baseUrl = \"api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst get = (id) => {\n  return axios.get(`${baseUrl}/${id}`);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst remove = (i) => {\n  return axios.delete(`${baseUrl}/${i}`);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  remove: remove,\n  update: update,\n  get: get,\n};\n","import React, { useState, useEffect } from 'react'\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport axios from \"axios\";\nimport phonebookService from \"./services/contacts\"\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNumber ] = useState('')\n    const [ useFilter, setUseFilter ] = useState(false)\n    const [ personsToShow, setPersonsToShow ] = useState(persons)\n    const [ notificationMessage, setNotificationMessage ] = useState(null)\n    const [ errorMessage, setErrorMessage ] = useState(null)\n\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    }, [])\n\n    const filterNames = (event) =>{\n        if(event.target.value.length > 0){\n            let filteredNames = []\n            persons.map(person => {\n                if(person.name.toLowerCase().includes(event.target.value.toLowerCase())){\n                    filteredNames = filteredNames.concat(person)\n                }\n            })\n            setPersonsToShow(filteredNames)\n            setUseFilter(true)\n        } else {\n            setUseFilter(false)\n        }\n    }\n\n    const handleNameInputChange = (event) =>{\n        setNewName(event.target.value)\n    }\n\n    const handleNumberInputChange = (event) =>{\n        setNumber(event.target.value)\n    }\n\n    const addPerson = (event) =>{\n        event.preventDefault()\n        if(persons.filter(person => person.name === newName).length > 0){\n            if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n                const person = persons.find(n => n.name === newName)\n                const updatedPerson = {...person, number: newNumber}\n                phonebookService.get(updatedPerson.id)\n                    .then(response => {\n                        phonebookService\n                            .update(updatedPerson.id, updatedPerson)\n                            .then(response => {\n                                setPersons(persons.map(person => person.id !== updatedPerson.id ? person : response.data))\n                            })\n                        setNotificationMessage(`Number ${newNumber} updated`)\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000)\n\n                    })\n                    .catch(error => {\n                        setErrorMessage(`Information of ${updatedPerson.name} has already been removed from server`)\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                        }, 5000)\n                    })\n            }\n        } else {\n            const newPerson = {name: newName, number: newNumber}\n            phonebookService\n                .create(newPerson)\n            setPersons(persons.concat(newPerson))\n            setNotificationMessage(`Added ${newName}`)\n            setTimeout(() => {setNotificationMessage(null)}, 5000)\n        }\n    }\n\n    const deletePerson = (name) =>{\n        if(window.confirm('Delete ' + name + ' ?')) {\n            let newArray = []\n            persons.map((person, i) => {\n                if (person.name !== name) {\n                    newArray = newArray.concat(person)\n                } else {\n                    phonebookService\n                        .remove(person.id)\n                }\n            })\n            setPersons(newArray)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            { notificationMessage && <div style={notificationStyle}>{notificationMessage}</div> }\n            { errorMessage && <div style={errorStyle}>{errorMessage}</div> }\n            <Filter filterNames={filterNames}/>\n            <h3>Add a new</h3>\n            <PersonForm\n                addPerson={addPerson}\n                handleNameInputChange={handleNameInputChange}\n                handleNumberInputChange={handleNumberInputChange}\n            />\n            <h3>Numbers</h3>\n            <Persons persons={ useFilter ? personsToShow : persons } deleteFunction={deletePerson}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}